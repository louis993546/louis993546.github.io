{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/bio.js","webpack:///./src/pages/index.js"],"names":["groupByMedia","imageVariants","withMedia","without","forEach","variant","media","push","generateImageSources","map","src","srcSet","srcSetWebp","sizes","Fragment","key","type","generateTracedSVGSources","tracedSVG","generateBase64Sources","base64","Placeholder","generateSources","spreadProps","ariaHidden","baseImage","Img","length","React","forwardRef","props","ref","style","loading","draggable","alt","otherProps","source","excluded","i","target","sourceKeys","Object","keys","indexOf","aria-hidden","position","top","left","width","height","objectFit","objectPosition","Image","render","convertedProps","resolutions","critical","this","fixed","fluid","concat","title","className","imgStyle","placeholderStyle","placeholderClassName","Tag","itemProp","imageStyle","placeholderImageProps","image","overflow","JSON","stringify","paddingBottom","aspectRatio","crossOrigin","imageRef","divStyle","display","Component","defaultProps","fadeIn","Bio","data","useStaticQuery","site","siteMetadata","author","social","marginBottom","rhythm","avatar","childImageSharp","name","marginRight","minWidth","borderRadius","summary","href","twitter","BlogIndex","location","siteTitle","posts","allMarkdownRemark","edges","node","frontmatter","fields","slug","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"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","file":"component---src-pages-index-js-6570e48fdb5d147e3d49.js","sourcesContent":["/** This is pretty much https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/src/index.js but working without JS */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst logDeprecationNotice = (prop, replacement) => {\n  if (process.env.NODE_ENV === `production`) {\n    return\n  }\n\n  console.log(\n    `\n    The \"${prop}\" prop is now deprecated and will be removed in the next major version\n    of \"gatsby-image\".\n    `\n  )\n\n  if (replacement) {\n    console.log(`Please use ${replacement} instead of \"${prop}\".`)\n  }\n}\n\n// Handle legacy props during their deprecation phase\nconst convertProps = props => {\n  let convertedProps = { ...props }\n  const { resolutions, sizes, critical } = convertedProps\n\n  if (resolutions) {\n    convertedProps.fixed = resolutions\n    delete convertedProps.resolutions\n  }\n  if (sizes) {\n    convertedProps.fluid = sizes\n    delete convertedProps.sizes\n  }\n\n  if (critical) {\n    logDeprecationNotice(`critical`, `the native \"loading\" attribute`)\n    convertedProps.loading = `eager`\n  }\n\n  // convert fluid & fixed to arrays so we only have to work with arrays\n  if (convertedProps.fluid) {\n    convertedProps.fluid = groupByMedia([].concat(convertedProps.fluid))\n  }\n  if (convertedProps.fixed) {\n    convertedProps.fixed = groupByMedia([].concat(convertedProps.fixed))\n  }\n\n  return convertedProps\n}\n\n// Return an array ordered by elements having a media prop, does not use\n// native sort, as a stable sort is not guaranteed by all browsers/versions\nfunction groupByMedia(imageVariants) {\n  const withMedia = []\n  const without = []\n  imageVariants.forEach(variant =>\n    (variant.media ? withMedia : without).push(variant)\n  )\n\n  if (without.length > 1 && process.env.NODE_ENV !== `production`) {\n    console.warn(\n      `We've found ${without.length} sources without a media property. They might be ignored by the browser, see: https://www.gatsbyjs.org/packages/gatsby-image/#art-directing-multiple-images`\n    )\n  }\n\n  return [...withMedia, ...without]\n}\n\nfunction generateImageSources(imageVariants) {\n  return imageVariants.map(({ src, srcSet, srcSetWebp, media, sizes }) => (\n    <React.Fragment key={src}>\n      {srcSetWebp && (\n        <source\n          type=\"image/webp\"\n          media={media}\n          srcSet={srcSetWebp}\n          sizes={sizes}\n        />\n      )}\n      <source media={media} srcSet={srcSet} sizes={sizes} />\n    </React.Fragment>\n  ))\n}\n\nfunction generateTracedSVGSources(imageVariants) {\n  return imageVariants.map(({ src, media, tracedSVG }) => (\n    <source key={src} media={media} srcSet={tracedSVG} />\n  ))\n}\n\nfunction generateBase64Sources(imageVariants) {\n  return imageVariants.map(({ src, media, base64 }) => (\n    <source key={src} media={media} srcSet={base64} />\n  ))\n}\n\n// Earlier versions of gatsby-image during the 2.x cycle did not wrap\n// the `Img` component in a `picture` element. This maintains compatibility\n// until a breaking change can be introduced in the next major release\nconst Placeholder = ({\n  src,\n  imageVariants,\n  generateSources,\n  spreadProps,\n  ariaHidden,\n}) => {\n  const baseImage = <Img src={src} {...spreadProps} ariaHidden={ariaHidden} />\n\n  return imageVariants.length > 1 ? (\n    <picture>\n      {generateSources(imageVariants)}\n      {baseImage}\n    </picture>\n  ) : (\n    baseImage\n  )\n}\n\nconst Img = React.forwardRef((props, ref) => {\n  const {\n    sizes,\n    srcSet,\n    src,\n    style,\n    loading,\n    draggable,\n    // `ariaHidden`props is used to exclude placeholders from the accessibility tree.\n    ariaHidden,\n    alt,\n    ...otherProps\n  } = props\n\n  return (\n    <img\n      aria-hidden={ariaHidden}\n      sizes={sizes}\n      srcSet={srcSet}\n      src={src}\n      alt={alt}\n      {...otherProps}\n      ref={ref}\n      loading={loading}\n      draggable={draggable}\n      style={{\n        position: `absolute`,\n        top: 0,\n        left: 0,\n        width: `100%`,\n        height: `100%`,\n        objectFit: `cover`,\n        objectPosition: `center`,\n        ...style,\n      }}\n    />\n  )\n})\n\nImg.propTypes = {\n  style: PropTypes.object,\n}\n\nclass Image extends React.Component {\n  render() {\n    const {\n      title,\n      alt,\n      className,\n      style = {},\n      imgStyle = {},\n      placeholderStyle = {},\n      placeholderClassName,\n      fluid,\n      fixed,\n      Tag,\n      itemProp,\n      loading,\n      draggable,\n    } = convertProps(this.props)\n\n    const imageStyle = {\n      ...imgStyle,\n    }\n\n    const imagePlaceholderStyle = {\n      ...imgStyle,\n      ...placeholderStyle,\n    }\n\n    const placeholderImageProps = {\n      title,\n      alt: ``,\n      style: imagePlaceholderStyle,\n      className: placeholderClassName,\n      itemProp,\n    }\n\n    if (fluid) {\n      const imageVariants = fluid\n      const image = fluid[0]\n\n      return (\n        <Tag\n          className={`${className ? className : ``} gatsby-image-wrapper`}\n          style={{\n            position: `relative`,\n            overflow: `hidden`,\n            ...style,\n          }}\n          key={`fluid-${JSON.stringify(image.srcSet)}`}\n        >\n          {/* Preserve the aspect ratio. */}\n          <Tag\n            aria-hidden\n            style={{\n              width: `100%`,\n              paddingBottom: `${100 / image.aspectRatio}%`,\n            }}\n          />\n\n          {/* Show the blurry base64 image. */}\n          {image.base64 && (\n            <Placeholder\n              ariaHidden\n              src={image.base64}\n              spreadProps={placeholderImageProps}\n              imageVariants={imageVariants}\n              generateSources={generateBase64Sources}\n            />\n          )}\n\n          {/* Show the traced SVG image. */}\n          {image.tracedSVG && (\n            <Placeholder\n              ariaHidden\n              src={image.tracedSVG}\n              spreadProps={placeholderImageProps}\n              imageVariants={imageVariants}\n              generateSources={generateTracedSVGSources}\n            />\n          )}\n\n          <picture>\n            {generateImageSources(imageVariants)}\n            <Img\n              alt={alt}\n              title={title}\n              sizes={image.sizes}\n              src={image.src}\n              crossOrigin={this.props.crossOrigin}\n              srcSet={image.srcSet}\n              style={imageStyle}\n              ref={this.imageRef}\n              itemProp={itemProp}\n              loading={loading}\n              draggable={draggable}\n            />\n          </picture>\n        </Tag>\n      )\n    }\n\n    if (fixed) {\n      const imageVariants = fixed\n      const image = fixed[0]\n\n      const divStyle = {\n        position: `relative`,\n        overflow: `hidden`,\n        display: `inline-block`,\n        width: image.width,\n        height: image.height,\n        ...style,\n      }\n\n      if (style.display === `inherit`) {\n        delete divStyle.display\n      }\n\n      return (\n        <Tag\n          className={`${className ? className : ``} gatsby-image-wrapper`}\n          style={divStyle}\n          key={`fixed-${JSON.stringify(image.srcSet)}`}\n        >\n          {/* Show the blurry base64 image. */}\n          {image.base64 && (\n            <Placeholder\n              ariaHidden\n              src={image.base64}\n              spreadProps={placeholderImageProps}\n              imageVariants={imageVariants}\n              generateSources={generateBase64Sources}\n            />\n          )}\n\n          {/* Show the traced SVG image. */}\n          {image.tracedSVG && (\n            <Placeholder\n              ariaHidden\n              src={image.tracedSVG}\n              spreadProps={placeholderImageProps}\n              imageVariants={imageVariants}\n              generateSources={generateTracedSVGSources}\n            />\n          )}\n\n          <picture>\n            {generateImageSources(imageVariants)}\n            <Img\n              alt={alt}\n              title={title}\n              width={image.width}\n              height={image.height}\n              sizes={image.sizes}\n              src={image.src}\n              crossOrigin={this.props.crossOrigin}\n              srcSet={image.srcSet}\n              style={imageStyle}\n              itemProp={itemProp}\n              loading={loading}\n              draggable={draggable}\n            />\n          </picture>\n        </Tag>\n      )\n    }\n\n    return null\n  }\n}\n\nImage.defaultProps = {\n  fadeIn: true,\n  alt: ``,\n  Tag: `div`,\n  // We set it to `lazy` by default because it's best to default to a performant\n  // setting and let the user \"opt out\" to `eager`\n  loading: `lazy`,\n}\n\nconst fixedObject = PropTypes.shape({\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  srcSet: PropTypes.string.isRequired,\n  base64: PropTypes.string,\n  tracedSVG: PropTypes.string,\n  srcWebp: PropTypes.string,\n  srcSetWebp: PropTypes.string,\n  media: PropTypes.string,\n})\n\nconst fluidObject = PropTypes.shape({\n  aspectRatio: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  srcSet: PropTypes.string.isRequired,\n  sizes: PropTypes.string.isRequired,\n  base64: PropTypes.string,\n  tracedSVG: PropTypes.string,\n  srcWebp: PropTypes.string,\n  srcSetWebp: PropTypes.string,\n  media: PropTypes.string,\n})\n\n// If you modify these propTypes, please don't forget to update following files as well:\n// https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/index.d.ts\n// https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/README.md#gatsby-image-props\n// https://github.com/gatsbyjs/gatsby/blob/master/docs/docs/gatsby-image.md#gatsby-image-props\nImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: PropTypes.oneOfType([fixedObject, PropTypes.arrayOf(fixedObject)]),\n  fluid: PropTypes.oneOfType([fluidObject, PropTypes.arrayOf(fluidObject)]),\n  fadeIn: PropTypes.bool,\n  title: PropTypes.string,\n  alt: PropTypes.string,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]), // Support Glamor's css prop.\n  critical: PropTypes.bool,\n  crossOrigin: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  style: PropTypes.object,\n  imgStyle: PropTypes.object,\n  placeholderStyle: PropTypes.object,\n  placeholderClassName: PropTypes.string,\n  Tag: PropTypes.string,\n  itemProp: PropTypes.string,\n  loading: PropTypes.oneOf([`auto`, `lazy`, `eager`]),\n  draggable: PropTypes.bool,\n}\n\nexport default Image\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"./image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50, grayscale: true) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author.name}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        Written by <strong>{author.name}</strong> {author.summary}\n        {` `}\n        <a href={`https://twitter.com/${social.twitter}`}>\n          He spends way too much time on Twitter\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}